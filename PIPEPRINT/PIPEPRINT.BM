''
' QB64_GJ_LIB
' GRYMMJACK'S PIPEPRINT LIB
'
' Pipe (|) Print emulates Mystic BBS pipe parsing
'
' USAGE:
'   Insert '$INCLUDE:'path_to_GJ_LIB/PIPEPRINT/PIPEPRINT.BI' at the top of file
'   Insert '$INCLUDE:'path_to_GJ_LIB/PIPEPRINT/PIPEPRINT.BM' at the bottom of file
' 
' @author Rick Christy <grymmjack@gmail.com>
' @uses PIPEPRINT.BI
' @uses DICT/DICT.BM
' @uses DUMP/DUMP.BM
' @uses ANSI/ANSI.BM
' @uses STRINGS/STRINGS.BM
'
$LET GJ_LIB_PIPEPRINT_INC_BM = 1



''
' PIPEPRINT returns ANSI codes (and can emulate ANSI through QB internals)
'
' @param s$ STRING to parse
' @param label$ STRING debug label
' @return STRING parsed with pipe codes replaced by ANSI codes
'
FUNCTION PIPEPRINT$ (s$, label$)
    l  = LEN(s$)
    h  = _HEIGHT : w = _WIDTH
    sh = _DESKTOPHEIGHT : sw = _DESKTOPWIDTH
    fh = _FONTHEIGHT : fw = _FONTWIDTH
    PRINT sys_info 
    END
    ' Reset the working variables (redim without _PRESERVE = erase $DYNAMIC)
    NUM_PIPES_FOUND = 0
    REDIM PIPES_POSITIONS(MAX_PIPES) AS INTEGER

    ' Find the pipes
    str_find_pos s$, "|", PIPES_POSITIONS%(), NUM_PIPES_FOUND
    REDIM _PRESERVE PIPES_POSITIONS(NUM_PIPES_FOUND-1) AS INTEGER
    u = UBOUND(PIPES_POSITIONS)
    out$ = s$
    ' Replace the pipe codes with ANSI codes
    IF NUM_PIPES_FOUND THEN
        FOR i = 0 TO u
            code$ = MID$(s$, PIPES_POSITIONS(i), 3)
            args$ = ""
            char$ = ""
            i$    = _TRIM$(STR$(i))
            pos$  = _TRIM$(STR$(PIPES_POSITIONS(i)))
            SELECT CASE code$
                CASE "|[X", "|[Y", "|[A", "|[B", "|[C", "|[D", "|@D"
                    args$ = MID$(s$, PIPES_POSITIONS(i)+3, 2)
                    SELECT CASE code$
                        CASE "|[X":
                            out$ = str_replace$(out$, code$ + args$, _
                                ansi_move_column(VAL(args$)), 1)
                        CASE "|[Y":
                            out$ = str_replace$(out$, code$ + args$, _
                                ansi_locate(CSRLIN, VAL(args$)), 1)
                        CASE "|[A":
                            out$ = str_replace$(out$, code$ + args$, _
                                ansi_move_up(VAL(args$)), 1)
                        CASE "|[B":
                            out$ = str_replace$(out$, code$ + args$, _
                                ansi_move_down(VAL(args$)), 1)
                        CASE "|[C":
                            out$ = str_replace$(out$, code$ + args$, _
                                ansi_move_right(VAL(args$)), 1)
                        CASE "|[D":
                            out$ = str_replace$(out$, code$ + args$, _
                                ansi_move_left(VAL(args$)), 1)
                        CASE "|@D":
                            char$ = MID$(s$, PIPES_POSITIONS(i)+5, 1)
                            out$ = str_replace$(out$, code$ + args$ + char$, _
                                STRING$(VAL(args$), char$), 1)
                    END SELECT
                CASE ELSE:
                    SELECT CASE code$
                        CASE "|[0":
                            out$ = str_replace$(out$, code$, _
                                ansi_hide_cursor, 1)
                        CASE "|[1":
                            out$ = str_replace$(out$, code$, _
                                ansi_show_cursor, 1)
                        CASE "|[K":
                            out$ = str_replace$(out$, code$, _
                                ansi_erase_to_eol, 1)
                        CASE "|CL":
                            out$ = str_replace$(out$, code$, _
                                ansi_erase_screen, 1)
                        CASE "|CN":
                            out$ = str_replace$(out$, code$, _
                                ansi_mode_blinking, 1)
                        CASE "|CY":
                            out$ = str_replace$(out$, code$, _
                                ansi_mode_blinking_reset, 1)
                        CASE "|CR":
                            out$ = str_replace$(out$, code$, _
                                CHR$(13), 1)
                        CASE "|PI":
                            out$ = str_replace$(out$, code$, _
                                "|", 1)
                        CASE "|@R": 'TODO
                            out$ = str_replace$(out$, code$, _
                                "", 1)
                        CASE "|@L":
                            out$ = str_replace$(out$, code$, _
                                "", 1)
                        CASE "|@C":
                            out$ = str_replace$(out$, code$, _
                                "", 1)
                        CASE "|00":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_black, 1)
                        CASE "|01":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_blue, 1)
                        CASE "|02":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_green, 1)
                        CASE "|03":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_cyan, 1)
                        CASE "|04":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_red, 1)
                        CASE "|05":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_magenta, 1)
                        CASE "|06":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_yellow, 1)
                        CASE "|07":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_white, 1)
                        CASE "|08":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_black, 1)
                        CASE "|09":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_blue, 1)
                        CASE "|10":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_green, 1)
                        CASE "|11":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_cyan, 1)
                        CASE "|12":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_red, 1)
                        CASE "|13":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_magenta, 1)
                        CASE "|14":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_yellow, 1)
                        CASE "|15":
                            out$ = str_replace$(out$, code$, _
                                ansi_fg_bright_white, 1)
                        CASE "|16":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_black, 1)
                        CASE "|17":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_blue, 1)
                        CASE "|18":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_green, 1)
                        CASE "|19":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_cyan, 1)
                        CASE "|20":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_red, 1)
                        CASE "|21":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_magenta, 1)
                        CASE "|22":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_yellow, 1)
                        CASE "|23":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_white, 1)
                        CASE "|24":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_black, 1)
                        CASE "|25":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_blue, 1)
                        CASE "|26":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_green, 1)
                        CASE "|27":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_cyan, 1)
                        CASE "|28":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_red, 1)
                        CASE "|29":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_magenta, 1)
                        CASE "|30":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_yellow, 1)
                        CASE "|31":
                            out$ = str_replace$(out$, code$, _
                                ansi_bg_bright_white, 1)
                    END SELECT
            END SELECT
        NEXT i
    END IF
    PIPEPRINT$ = out$
END FUNCTION



$IF GJ_LIB_DICT_INC_BM = UNDEFINED THEN
'$INCLUDE:'../DICT/DICT.BM'
$END IF
$IF GJ_LIB_DUMP_INC_BM = UNDEFINED THEN
'$INCLUDE:'../DUMP/DUMP.BM'
$END IF
$IF GJ_LIB_ANSI_INC_BM = UNDEFINED THEN
'$INCLUDE:'../ANSI/ANSI.BM'
$END IF
$IF GJ_LIB_STRINGS_INC_BM = UNDEFINED THEN
'$INCLUDE:'../STRINGS/STRINGS.BM'
$END IF
