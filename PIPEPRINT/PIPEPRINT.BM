''
' QB64_GJ_LIB
' GRYMMJACK'S PIPEPRINT LIB
'
' Pipe (|) Print emulates Mystic BBS pipe parsing
'
' USAGE:
'   Insert '$INCLUDE:'path_to_GJ_LIB/PIPEPRINT/PIPEPRINT.BI' at the top of file
'   Insert '$INCLUDE:'path_to_GJ_LIB/PIPEPRINT/PIPEPRINT.BM' at the bottom of file
' 
' @author Rick Christy <grymmjack@gmail.com>
' @uses PIPEPRINT.BI
' @uses DICT/DICT.BM
' @uses DUMP/DUMP.BM
' @uses ANSI/ANSI.BM
' @uses STRINGS/STRINGS.BM
'
$LET GJ_LIB_PIPEPRINT_INC_BM = 1



''
' Parses pipe codes and returns ANSI (can emulate ANSI via QB)
'
' @param s$ STRING to parse
' @return STRING parsed with pipe codes replaced by ANSI codes
'
FUNCTION PIPEPRINT$ (s$)
    DIM AS INTEGER w, nums, p, u, i, l, r
    DIM AS STRING sout, code, args, find, spaces, txt, t, nopi, repl, char
    w% = _WIDTH
    ansi_x% = POS(0) : ansi_y% = CSRLIN
    sout$ = s$
    
    ' Reset the working variables (redim without _PRESERVE = erase $DYNAMIC)
    NUM_PIPES_FOUND = 0
    REDIM PIPES_POSITIONS(MAX_PIPES) AS INTEGER

    ' Find the pipes
    str_find_pos s$, "|", PIPES_POSITIONS%(), NUM_PIPES_FOUND
    IF NUM_PIPES_FOUND = 0 THEN
        PIPEPRINT$ = s$
        EXIT FUNCTION
    ELSE
        REDIM _PRESERVE PIPES_POSITIONS(NUM_PIPES_FOUND-1) AS INTEGER
        u = UBOUND(PIPES_POSITIONS)
    END IF

    ' Replace the pipe codes with ANSI codes
    IF NUM_PIPES_FOUND THEN
        FOR i = 0 TO u
            p% = PIPES_POSITIONS(i)
            code$ = MID$(s$, p%, 3)
            args$ = "" : char$ = "" : txt$ = "" : t$ = "" : nums% = 0
            find$ = "" : repl$ = "" : spaces$ = "" : nopi$ = ""
            SELECT CASE code$
                CASE "|[X", "|[Y", "|[A", "|[B", "|[C", "|[D", "|@D":
                    args$ = _TRIM$(MID$(s$, p%+3, 2))
                    nums% = ABS(VAL(args$))
                    find$ = code$ + args$
            END SELECT
            SELECT CASE code$
                CASE "|[X": repl$ = ansi_move_column(nums%)
                CASE "|[Y": repl$ = ansi_locate(nums%, ansi_x%)
                CASE "|[A": repl$ = ansi_move_up(nums%)
                CASE "|[B": repl$ = ansi_move_down(nums%)
                CASE "|[C": repl$ = ansi_move_right(nums%)
                CASE "|[D": repl$ = ansi_move_left(nums%)
                CASE "|@D":
                    IF args$ = "00" THEN
                        nums% = w%
                    END IF
                    char$ = MID$(s$, p%+5, 1)
                    find$ = code$ + args$ + char$
                    repl$ = STRING$(nums%, char$)
            END SELECT
            SELECT CASE code$
                CASE "|@R", "|@L", "|@C":
                    l%    = INSTR(p%, s$, "{")+1
                    r%    = INSTR(p%, s$, "}")
                    txt$  = MID$(s$, l%, r%-l%)
                    find$ = code$ + "{" + txt$ + "}"
                    nopi$ = PIPESTRIP(txt$)
            END SELECT
            SELECT CASE code$
                CASE "|@R":
                    spaces$ = STRING$(w% - LEN(nopi$), " ") 
                    repl$   = spaces$ + txt$
                    repl$   = ansi_move_column(1) + repl$
                CASE "|@L":
                    spaces$ = STRING$(w% - LEN(nopi$), " ")
                    repl$   = txt$ + spaces$
                    repl$   = ansi_move_column(1) + repl$
                CASE "|@C":
                    spaces$ = STRING$((w% - LEN(nopi$)) \ 2, " ")
                    repl$   = spaces$ + txt$ + spaces$
                    repl$   = ansi_move_column(1) + repl$
            END SELECT
            SELECT CASE code$
                CASE "|[0", "|[1", "|[K", "|CL", "|CN", "|CY", "|CR", _
                        "|PI", "|00", "|01", "|02", "|03", "|04", "|05", _
                        "|06", "|07", "|08", "|09", "|10", "|11", "|12", _
                        "|13", "|14", "|15", "|16", "|17", "|18", "|19", _
                        "|20", "|21", "|22", "|23", "|24", "|25", "|26", _
                        "|27", "|28", "|29", "|30", "|31":
                        find$ = code$
            END SELECT 
            SELECT CASE code$
                CASE "|[0": repl$ = ansi_hide_cursor
                CASE "|[1": repl$ = ansi_show_cursor
                CASE "|[K": repl$ = ansi_erase_to_eol
                CASE "|CL": repl$ = ansi_erase_screen
                CASE "|CN": repl$ = ansi_mode_blinking
                CASE "|CY": repl$ = ansi_mode_blinking_reset
                CASE "|CR": repl$ = ansi_move_down(1) + ansi_move_column(1)
                CASE "|PI": repl$ = "|"
                CASE "|00": repl$ = ansi_fg_black
                CASE "|01": repl$ = ansi_fg_blue
                CASE "|02": repl$ = ansi_fg_green
                CASE "|03": repl$ = ansi_fg_cyan
                CASE "|04": repl$ = ansi_fg_red
                CASE "|05": repl$ = ansi_fg_magenta
                CASE "|06": repl$ = ansi_fg_yellow
                CASE "|07": repl$ = ansi_fg_white
                CASE "|08": repl$ = ansi_fg_bright_black
                CASE "|09": repl$ = ansi_fg_bright_blue
                CASE "|10": repl$ = ansi_fg_bright_green
                CASE "|11": repl$ = ansi_fg_bright_cyan
                CASE "|12": repl$ = ansi_fg_bright_red
                CASE "|13": repl$ = ansi_fg_bright_magenta
                CASE "|14": repl$ = ansi_fg_bright_yellow
                CASE "|15": repl$ = ansi_fg_bright_white
                CASE "|16": repl$ = ansi_bg_black
                CASE "|17": repl$ = ansi_bg_blue
                CASE "|18": repl$ = ansi_bg_green
                CASE "|19": repl$ = ansi_bg_cyan
                CASE "|20": repl$ = ansi_bg_red
                CASE "|21": repl$ = ansi_bg_magenta
                CASE "|22": repl$ = ansi_bg_yellow
                CASE "|23": repl$ = ansi_bg_white
                CASE "|24": repl$ = ansi_bg_bright_black
                CASE "|25": repl$ = ansi_bg_bright_blue
                CASE "|26": repl$ = ansi_bg_bright_green
                CASE "|27": repl$ = ansi_bg_bright_cyan
                CASE "|28": repl$ = ansi_bg_bright_red
                CASE "|29": repl$ = ansi_bg_bright_magenta
                CASE "|30": repl$ = ansi_bg_bright_yellow
                CASE "|31": repl$ = ansi_bg_bright_white
            END SELECT            
            sout$ = str_replace$(sout$, find$, repl$, 1)
        NEXT i
    END IF
    PIPEPRINT$ = sout$
END FUNCTION


''
' Strips all pipe codes from a string
'
' @param s$ STRING to strip codes from
' @return STRING with pipe codes stripped
'
FUNCTION PIPESTRIP$ (s$)
    DIM AS INTEGER w, nums, p, u, i, l, r
    DIM AS STRING sout, code, args, find, spaces, txt, t, nopi, repl, char
    sout$ = s$
    
    ' Reset the working variables (redim without _PRESERVE = erase $DYNAMIC)
    NUM_PIPES_STRIP_FOUND = 0
    REDIM PIPES_STRIP_POSITIONS(MAX_PIPES_STRIP) AS INTEGER

    ' Find the pipes
    str_find_pos s$, "|", PIPES_STRIP_POSITIONS%(), NUM_PIPES_STRIP_FOUND
    IF NUM_PIPES_STRIP_FOUND = 0 THEN
        PIPESTRIP$ = s$
        EXIT FUNCTION
    ELSE
        REDIM _PRESERVE PIPES_STRIP_POSITIONS(NUM_PIPES_STRIP_FOUND-1) AS INTEGER
        u = UBOUND(PIPES_STRIP_POSITIONS)
    END IF

    ' Replace the pipe codes with ANSI codes
    IF NUM_PIPES_STRIP_FOUND THEN
        FOR i = 0 TO u
            p% = PIPES_STRIP_POSITIONS(i)
            code$ = MID$(s$, p%, 3)
            args$ = "" : char$ = "" : txt$ = "" : t$ = "" : nums% = 0
            find$ = "" : repl$ = "" : spaces$ = ""
            SELECT CASE code$
                CASE "|[X", "|[Y", "|[A", "|[B", "|[C", "|[D", "|@D":
                    args$ = _TRIM$(MID$(s$, p%+3, 2))
                    nums% = ABS(VAL(args$))
                    find$ = code$ + args$
            END SELECT
            SELECT CASE code$
                CASE "|@D":
                    IF args$ = "00" THEN
                        nums% = w%
                    END IF
                    char$ = MID$(s$, p%+5, 1)
                    find$ = code$ + args$ + char$
            END SELECT
            SELECT CASE code$
                CASE "|@R", "|@L", "|@C":
                    l%    = INSTR(p%, s$, "{")+1
                    r%    = INSTR(p%, s$, "}")
                    txt$  = MID$(s$, l%, r%-l%)
                    find$ = code$ + "{" + txt$ + "}"
            END SELECT
            SELECT CASE code$
                CASE "|[0", "|[1", "|[K", "|CL", "|CN", "|CY", "|CR", _
                        "|PI", "|00", "|01", "|02", "|03", "|04", "|05", _
                        "|06", "|07", "|08", "|09", "|10", "|11", "|12", _
                        "|13", "|14", "|15", "|16", "|17", "|18", "|19", _
                        "|20", "|21", "|22", "|23", "|24", "|25", "|26", _
                        "|27", "|28", "|29", "|30", "|31":
                        find$ = code$
            END SELECT 
            repl$ = ""
            sout$ = str_replace$(sout$, find$, repl$, 1)
        NEXT i
    END IF
    PIPESTRIP$ = sout$
END FUNCTION



$IF GJ_LIB_DICT_INC_BM = UNDEFINED THEN
'$INCLUDE:'../DICT/DICT.BM'
$END IF
$IF GJ_LIB_DUMP_INC_BM = UNDEFINED THEN
'$INCLUDE:'../DUMP/DUMP.BM'
$END IF
$IF GJ_LIB_ANSI_INC_BM = UNDEFINED THEN
'$INCLUDE:'../ANSI/ANSI.BM'
$END IF
$IF GJ_LIB_STRINGS_INC_BM = UNDEFINED THEN
'$INCLUDE:'../STRINGS/STRINGS.BM'
$END IF
