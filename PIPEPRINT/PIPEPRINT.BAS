'' 
' QB64_GJ_LIB 
' GRYMMJACK'S PIPEPRINT LIB
' 
' Pipe (|) Print emulates Mystic BBS pipe parsing
'
' @author Rick Christy <grymmjack@gmail.com>
' @uses PIPEPRINT.BI
' @uses PIPEPRINT.BM
'
$LET GJ_LIB_UNIFIED_TESTING = 1
$IF GJ_LIB_UNIFIED_TESTING = DEFINED AND GJ_LIB_INC_BI = UNDEFINED THEN
'$INCLUDE:'../_GJ_LIB.BI'
$END IF
$IF GJ_LIB_PIPEPRINT_INC_BI = UNDEFINED THEN
'$INCLUDE:'PIPEPRINT.BI'
$END IF



_TITLE "QB64_GJ_LIB PIPEPRINT LIB TESTS"

' Emulate ANSI support with native QB64 functionality
GJ_LIB_ANSI_EMU = FALSE

' Output ANSI codes
GJ_LIB_ANSI_OUTPUT = TRUE

' Setup the console
' @bug MacOS/Linux only see: https://github.com/QB64Official/qb64/issues/33
$IF WINDOWS THEN 
    $CONSOLE:ONLY
$ENDIF
_CONTROLCHR OFF
LOCATE 1,1,1 ' Initialize the cursor and turn it on

DIM SHARED PIPE_TESTS_DICT(14) AS DICT
PIPE_TESTS_DICT(0).key  = "PIPETEST_COLORS_STANDARD_FG"
PIPE_TESTS_DICT(0).val  = "|CL|08-|07-|15-|11[|14 YELLOW THING |11]|15-|07-|08"
PIPE_TESTS_DICT(1).key  = "PIPETEST_COLORS_STANDARD_BG"
PIPE_TESTS_DICT(1).val  = "|CL|23   |19   |18   |16 FOO |18   |19   |23   "
PIPE_TESTS_DICT(2).key  = "PIPETEST_POSITIONING"
PIPE_TESTS_DICT(2).val  = "|CL|[X01|[Y011,1|[X10|[Y011,10|[X01|[Y1010,1|[X1010,10"
PIPE_TESTS_DICT(3).key  = "PIPETEST_CURSORS_DELAY"
PIPE_TESTS_DICT(3).val  = "|CL|[1SOMETHING|DE|DE|DE|DE|[0NOCURSOR|DE|DE|DE|DE"
PIPE_TESTS_DICT(4).key  = "PIPETEST_COLORS_ICE"
PIPE_TESTS_DICT(4).val  = "|CL|25|15 BRIGHT WHITE ON BRIGHT BLUE |PA"
PIPE_TESTS_DICT(5).key  = "PIPETEST_MOVE_AB"
PIPE_TESTS_DICT(5).val  = "|CL|[X10|[Y1010,10 line.|[A01Up one line|[B01Down one line"
PIPE_TESTS_DICT(6).key  = "PIPETEST_MOVE_CD"
PIPE_TESTS_DICT(6).val  = "|CL|[X10|[Y1010,10 line.|[C10Right 10|[D10Left 10"
PIPE_TESTS_DICT(7).key  = "PIPETEST_RIGHT_JUSTIFY"
PIPE_TESTS_DICT(7).val  = "|CL|@RRIGHT JUSTIFIED TEXT"
PIPE_TESTS_DICT(8).key  = "PIPETEST_LEFT_JUSTIFY"
PIPE_TESTS_DICT(8).val  = "|CL|[X20start|@LLEFT JUSTIFIED TEXT"
PIPE_TESTS_DICT(9).key  = "PIPETEST_CENTER_JUSTIFY"
PIPE_TESTS_DICT(9).val  = "|CL|[X40|@CCENTER JUSTIFIED TEXT"
PIPE_TESTS_DICT(10).key = "PIPETEST_BAR_TEST"
PIPE_TESTS_DICT(10).val = "|CL|23|00|@D79 |@RRIGHT JUSTIFIED TEXT "
PIPE_TESTS_DICT(11).key = "PIPETEST_PIPES"
PIPE_TESTS_DICT(11).val = "|CL|08|PI|09|PI|10|PI|15 PIPES!"
PIPE_TESTS_DICT(12).key = "PIPETEST_CRLF"
PIPE_TESTS_DICT(12).val = "|CL|07|00FOO BAR BAZ|CRBOP BIZ BUZ|CRBIP BEP BAP"
PIPE_TESTS_DICT(13).key = "PIPETEST_BOX_TEST"
PIPE_TESTS_DICT(13).val = "|CL|23|00|@D10 |[B01|[D10 |[C09 |[B01|[D10|@D10 |15|00|CR"
PIPE_TESTS_DICT(14).key = "PIPETEST_PIPE_STRING1"
PIPE_TESTS_DICT(14).val = "|CL|08-|07-|15-|11[|14 YELLOW THING |11]|15-|07-|08"

' PRINT dump_dict(PIPE_TESTS_DICT(), "PIPE_TESTS_DICT")
' END

' Walk dict for tests
l = LBOUND(PIPE_TESTS_DICT) : u = UBOUND(PIPE_TESTS_DICT)
FOR i = l TO u
    test_start "PIPEPRINT with " + PIPE_TESTS_DICT(i).key
    PRINT PIPE_TESTS_DICT(i).val
    PRINT PIPEPRINT(PIPE_TESTS_DICT(i).val, PIPE_TESTS_DICT(i).key)
    test_complete
NEXT i

PRINT "All tests complete, press a key." : anykey
CLS



SUB anykey ()
    SLEEP
END SUB


SUB test_start (s$)
    CLS
    nil$ = ansi_mode_reset_all
    IF GJ_LIB_ANSI_OUTPUT THEN PRINT nil$;
    PRINT "Press any key to test "; s$
    anykey
END SUB


SUB test_complete ()
    PRINT "Test complete, press a key."
    nil$ = ansi_mode_reset_all
    IF GJ_LIB_ANSI_OUTPUT THEN PRINT nil$;
    anykey
END SUB

$IF GJ_LIB_UNIFIED_TESTING = DEFINED AND GJ_LIB_INC_BM = UNDEFINED THEN
'$INCLUDE:'../_GJ_LIB.BM'
$END IF
$IF GJ_LIB_PIPEPRINT_INC_BM = UNDEFINED THEN
'$INCLUDE:'PIPEPRINT.BM'
$END IF
