'' 
' QB64_GJ_LIB 
' GRYMMJACK'S PIPEPRINT LIB
' 
' Pipe (|) Print emulates Mystic BBS pipe parsing
'
' @author Rick Christy <grymmjack@gmail.com>
' @uses PIPEPRINT.BI
' @uses PIPEPRINT.BM
'
$LET GJ_LIB_UNIFIED_TESTING = 1
' $LET ANSI_DEBUGGING = 1
$IF GJ_LIB_UNIFIED_TESTING = DEFINED AND GJ_LIB_INC_BI = UNDEFINED THEN
'$INCLUDE:'../_GJ_LIB.BI'
$END IF
$IF GJ_LIB_PIPEPRINT_INC_BI = UNDEFINED THEN
'$INCLUDE:'PIPEPRINT.BI'
$END IF



_TITLE "QB64_GJ_LIB PIPEPRINT LIB TESTS"

' Emulate ANSI support with native QB64 functionality
GJ_LIB_ANSI_EMU = FALSE

' Output ANSI codes
GJ_LIB_ANSI_OUTPUT = TRUE

' Setup the console
' @bug MacOS/Linux only see: https://github.com/QB64Official/qb64/issues/33
$IF WINDOWS THEN 
    $CONSOLE:ONLY
$ELSE
    $CONSOLE
    _DEST _CONSOLE
$ENDIF
_CONTROLCHR OFF
LOCATE 1,1,1 ' Initialize the cursor and turn it on

DIM SHARED PIPE_TESTS_DICT(16) AS DICT
PIPE_TESTS_DICT(0).key  = "PIPETEST_COLORS_STANDARD_FG"
PIPE_TESTS_DICT(0).val  = "|CL|08-|07-|15-|11[|14 YELLOW THING |11]|15-|07-|08-"
PIPE_TESTS_DICT(1).key  = "PIPETEST_COLORS_STANDARD_BG"
PIPE_TESTS_DICT(1).val  = "|CL|CY|24   |23   |31   |16 FOO |31   |23   |24   "
PIPE_TESTS_DICT(2).key  = "PIPETEST_POSITIONING"
PIPE_TESTS_DICT(2).val  = "|CL|[X30|[Y011,30|[X40|[Y011,40|[X30|[Y2020,30|[Y20|[X4020,40|[Y22|[X01"
PIPE_TESTS_DICT(3).key  = "PIPETEST_CURSORS"
PIPE_TESTS_DICT(3).val  = "|CL|[0CURSOR OFF"
PIPE_TESTS_DICT(4).key  = "PIPETEST_COLORS_ICE"
PIPE_TESTS_DICT(4).val  = "|CL|CY|25|15 BRIGHT WHITE ON BRIGHT BLUE |[1CURSOR ON"
PIPE_TESTS_DICT(5).key  = "PIPETEST_MOVE_AB"
PIPE_TESTS_DICT(5).val  = "|CL|[X10|[Y1010,10 line.|[A01Up one line|[B01Down one line"
PIPE_TESTS_DICT(6).key  = "PIPETEST_MOVE_CD"
PIPE_TESTS_DICT(6).val  = "|CL|[X10|[Y1010,10 line.|[C10Right 10|[D10Left 10"
PIPE_TESTS_DICT(7).key  = "PIPETEST_RIGHT_JUSTIFY"
PIPE_TESTS_DICT(7).val  = "|CL|@R{RIGHT JUSTIFIED TEXT}"
PIPE_TESTS_DICT(8).key  = "PIPETEST_LEFT_JUSTIFY"
PIPE_TESTS_DICT(8).val  = "|CL|[X20start|@L{LEFT JUSTIFIED TEXT}BOBO"
PIPE_TESTS_DICT(9).key  = "PIPETEST_CENTER_JUSTIFY"
PIPE_TESTS_DICT(9).val  = "|CL|[X40|@C{CENTER JUSTIFIED TEXT}"
PIPE_TESTS_DICT(10).key = "PIPETEST_BAR_TEST"
PIPE_TESTS_DICT(10).val = "|CL|23|16|@D79 |@R{RIGHT JUSTIFIED TEXT}"
PIPE_TESTS_DICT(11).key = "PIPETEST_PIPES"
PIPE_TESTS_DICT(11).val = "|CL|08|PI|09|PI|10|PI|15 PIPES!"
PIPE_TESTS_DICT(12).key = "PIPETEST_CRLF"
PIPE_TESTS_DICT(12).val = "|CL|07|16FOO BAR BAZ|CRBOP BIZ BUZ|CRBIP BEP BAP"
PIPE_TESTS_DICT(13).key = "PIPETEST_BOX_TEST"
PIPE_TESTS_DICT(13).val = "|CL|23|00|@D11 |[B01|[D11 |[C09 |[B01|[D11|@D11 |15|00|CR"
PIPE_TESTS_DICT(14).key = "PIPETEST_PIPE_STRING1"
PIPE_TESTS_DICT(14).val = "|CL|08-|07-|15-|11[|14 YELLOW THING |11]|15-|07-|08-"
PIPE_TESTS_DICT(15).key = "PIPETEST_FG_COLORS"
c$ = "|23|00 BLACK |16"
c$ = c$ + "|01 BLUE |02 GREEN |03 CYAN |04 RED |05 MAGENTA |06 YELLOW |07 WHITE "
c$ = c$ + "|08 BRIGHT BLACK |09 BRIGHT BLUE |10 BRIGHT GREEN |11 BRIGHT CYAN "
c$ = c$ + "|12 BRIGHT RED |13 BRIGHT MAGENTA |14 BRIGHT YELLOW |15 BRIGHT WHITE "
PIPE_TESTS_DICT(15).val = c$
PIPE_TESTS_DICT(16).key = "PIPETEST_BG_COLORS"
c$ = "|CY|15|16 BLACK "
c$ = c$ + "|15|17 BLUE |18 GREEN |19 CYAN |20 RED |21 MAGENTA |22 YELLOW |23 WHITE "
c$ = c$ + "|24 BRIGHT BLACK |25 BRIGHT BLUE |26 BRIGHT GREEN |27 BRIGHT CYAN "
c$ = c$ + "|28 BRIGHT RED |29 BRIGHT MAGENTA |00|30 BRIGHT YELLOW |31 BRIGHT WHITE "
PIPE_TESTS_DICT(16).val = c$

' Walk dict for tests
l = LBOUND(PIPE_TESTS_DICT) : u = UBOUND(PIPE_TESTS_DICT)
FOR i = 0 TO u
    test_start "PIPEPRINT with " + PIPE_TESTS_DICT(i).key
    PRINT PIPEPRINT(PIPE_TESTS_DICT(i).val)
    PRINT PIPEPRINT("|07|16SOURCE:|CR"); PIPE_TESTS_DICT(i).val
    test_complete
NEXT i

PRINT : PRINT "All tests complete!"



SUB anykey ()
    SLEEP
END SUB


SUB test_start (s$)
    nil$ = ansi_mode_reset_all
    IF GJ_LIB_ANSI_OUTPUT THEN PRINT nil$;
    CLS
    PRINT "Press any key to test "; s$
    anykey
END SUB


SUB test_complete ()
    PRINT "Test complete, press a key."
    nil$ = ansi_mode_reset_all
    IF GJ_LIB_ANSI_OUTPUT THEN PRINT nil$;
    anykey
END SUB

$IF GJ_LIB_UNIFIED_TESTING = DEFINED AND GJ_LIB_INC_BM = UNDEFINED THEN
'$INCLUDE:'../_GJ_LIB.BM'
$END IF
$IF GJ_LIB_PIPEPRINT_INC_BM = UNDEFINED THEN
'$INCLUDE:'PIPEPRINT.BM'
$END IF
